Spring Annotation
- 스프링 어노테이션을 이용하여 빈 관련 정보를 설명할 수 있다.


Annotation 사용을 하기에 설정들을 필요로 한다.
1. <bean class = "org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcesser" />
	을 bean객체로 등록하여 annotation 적용	
2. <context:annotation-config/> 태그 이용
	@Autowired, @required, @resource, @PostConstructor ...
3. <context:component-scan base-package="패키지명" />
	@Component, @Controller, @Service, @Repository ..., annotation-config의 기능도 포함.
4. <mvc:annotation-driven />
	@RequestMapping, @Valid, @ResponseBody... SpringMVC의 핵심 기능을 활성화한다.
	
--> Spring Bean Config File에 작성한다.


1. @Component 
클래스에 선언하며 해당 클래스를 자동으로 bean으로 등록한다.
bean의 이름은 해당 클래스명이 사용된다.(첫글자는 소문자로 등록이 된다.)

2. @Autowired
spring에서 의존관계를 자동으로 설정할 때 사용.
해당 타입의 빈 객체가 없거나 2개 이상일 경우 예외 발생시킨다.

3. @Qualifier
2개 이상의 동일 타입 빈 객체가 존재할 경우 특정 빈을 autowired 처리할 수 있게 설정한다.

@Autowired
@Qualifier("test")
private Test test;		(두 친구는 묶음이다.)

4. @Requierd
필수 프로퍼티임을 명시한다. setter에 붙인다.

5. @Repository
 DAO에 사용된다. Exception을 DataAccessException으로 변환한다.

6. @Service
비즈니스로직(service단)에 사용된다.

7. @Resource
자바 어노테이션(스프링 어노테이션 아님.), 의존성 주입 어노테이션.
byName방식 생성되어있는 애들 중에 이름을 찾아 집어넣음.

@Resource
private Test test;		//자동으로 test라는 애를 찾아 주입시킴.

@Resource(name="mytest")
private Test test;		//mytest라는 애를 찾아서 주입시킨다.

















