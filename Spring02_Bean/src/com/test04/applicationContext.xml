<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="lee" class="com.test04.Address">
		<property name="name" value="박태욱"></property>	<!-- setter로 받아오는 방법. 기본생성자밖에 없기 때문이다. -->
		<property name="addr" value="서울시 서초구"></property>
		<property name="phone" value="010-1111-1111"></property>
	</bean>
	<bean id="kim" class="com.test04.Address">
		<property name="name" value="김태욱"></property>
		<property name="addr" value="경기도 용인시"></property>
		<property name="phone" value="010-1234-1234"></property>
	</bean>
	
	<!--            user01, pass01, 박태욱, 010-1111-2222                       -->
	<!--            생성자를 이용하여 id,pw, name, phone  -->
	<!--            user02, pass02, 김태욱, 010-1111-3333                       -->
	<!-- 			setter를 이용하여  -->
	<!--            user03, pass03, 이태욱, 010-1111-4444                       -->
	
	
	<bean id="user01" class="com.test04.Member">
		<constructor-arg value="user01"/>
		<constructor-arg value="pass01"/>
		<constructor-arg value="박태욱"/>
		<constructor-arg value="010-1111-1111"/>
	</bean>
	<bean id="user02" class="com.test04.Member">
		<property name="no" value="user02"></property>
		<property name="pw" value="pass02"></property>
		<property name="name" value="김태욱"></property>
		<property name="phone" value="010-1111-2222"></property>
	</bean>
	<bean id="user03" class="com.test04.Member">
		<constructor-arg value="user03"/>
		<constructor-arg value="pass03"/>
		<constructor-arg value="이태욱"/>
		<constructor-arg value="010-1111-3333"/>
	</bean>
	

</beans>















